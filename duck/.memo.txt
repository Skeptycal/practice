※この物語はフィクションであり、実在および架空の人物・団体とは一切関係ありません

A: わたしの aeson-lens パッケージでは
A: (Maybe a) から (Maybe b) へのレンズにすることにより、
A: 簡単に繋げるようにしているのだ。
B: なんと
B: はじめからMaybeに入ってしまえばよいと・・・
A: ちなにみ、lens-3.7以降には、
A: そうだよ
A: ちなにみ、decodeAeson の返り値も
A: Maybe Value とかだし、
A: いいことづくめなのだ
A: ちなにみ、lens-3.7以降には、
A: プリズムというものもあるぞ
A: プリズムは0-1トラバーサルなので、Maybeの代わりに使うこともできるぞ！
A: ﾌﾟﾘｽﾞﾑｦｰ
A: (Maybe a) から (Maybe b) へのレンズにすることにより、
A: 簡単に繋げるようにしているのだ。
B: なんと
B: はじめからMaybeに入ってしまえばよいと・・・
A: ちなにみ、lens-3.7以降には、
A: そうだよ
A: ちなにみ、decodeAeson の返り値も
A: Maybe Value とかだし、
A: いいことづくめなのだ
A: ちなにみ、lens-3.7以降には、
A: プリズムというものもあるぞ
A: プリズムは0-1トラバーサルなので、Maybeの代わりに使うこともできるぞ！
A: ﾌﾟﾘｽﾞﾑｦｰ
B: nazogahukamaru
A: そもそもTraversalをシッテイルカナ？
B: Traversableなら知ってる（恐怖）
A: そっちじゃないです（真顔）
A: Lensの一般化の話は？
B: いったいどうちがおうというのかね
A: えｋめｔｔのビデオを見てるとわかると思うんだけど
B: Lensの一般化とか・・・Lensだけでいっぱんだというのに
A: 「ドッドッドッドッド」
B: えｋめｔｔのNYCのビデオ化
A: ﾊﾟﾜｰｵﾌﾞﾄﾞｯ
B: (.) . (.) tits
A: ﾊﾟぅﾜｰｵﾌﾞﾄﾞｯ
A: ﾄﾞﾄﾞﾄﾞｯﾄﾞdｯﾄﾞ
A: っと行っているように、
A: ﾊﾟｳﾜｰｵﾌﾞﾄﾞｯ！の開放が
A: Lensなのだ
A: んで、そこに挟み込むものが、
A: ApplicativeだったらTraversalになるんじゃよ
A: 「なん、・・・だと？」
B: まさに「あなたの言ってること、ついていけない、理解できないよ™」
B: という顔してる
A: つまり、titsのパワーでもあるわけだ
A: titsの生み出すパワー、
A: tits は、（a->) という、「Functor」に対する、
A: 高次の操作を提供しはる
A: さて、これを一般化すると
A: 「これこれしかじかの」
A: 「かくかくうまうまというわけじゃな！」
A: というわけで、レンズがTraverseできるようになるんだ
B: あれ、じゃあもしかして、
B: SimpleLens a b と　SimpleLens b c を合成して　SimpleLens a cを作る
B: ことの茂名ディック版、
B: SimpleLens a (m b) と　SimpleLens b (m c) を合成して　SimpleLens a (m c)
B: みたいなのも既出とか？
B: なんとなくだけど、オブジェクトの要素へアクセスするレンズって、
B: Lens Obj Obj (Maybe Int) Int
B: みたいなんになるのよね
B: つまり、setterは必ず成功するけど
B: getterは、そのレコードがまだ作られてなかったらNothingを返すようにしないといけない
B: しかし、Monadic版Lensの発想もはじめからモナドにすると決めてれば
B: aeson-lensと同じノリで解決できるなあ
A: そいつあー違い開放になっとるな
A: 違う解法
A: Actionなんちゃらで
A: ApplicativeのところにMonadとれるようにしとるやつ
B: やはりあったか・・・
B: もはや全貌が脳に排卵
B: http://vimeo.com/56063074
B: ビデオこれか
